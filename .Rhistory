subpatients.df$Chain,subpatients.df$TRV,sep='_')
cdr3.ss = AAStringSet(subpatients.df$CDR3)
names(cdr3.ss) = cdr3_names
writeXStringSet(cdr3.ss,paste('data/fasta/',patient_groups[i],'_',chain,'.fa',sep=''))
}
}
write_group_fasta(all_patients_TRG.df,'TRG')
write_group_fasta(all_patients_TRD.df,'TRD')
TRD_scores = calc_pairwise(all_patients_TRD.df,"BLOSUM62")
TRG_scores = calc_pairwise(all_patients_TRG.df,"BLOSUM62")
?save
save(TRD_scores,TRG_scores,all_patients_TRD.df,all_patients_TRG.df,
file='data/pairwise_scores.RData')
patients.df = all_patients_TRD.df
patients.df = all_patients_TRD.df
annotation = data.frame(group=patients.df$Group,ID=factor(patients.df$ID),tissue=patients.df$Tissue,
V=patients.df$TRV,freq=patients.df$Freq)
aheatmap(TRD_scores,color=quakescale(100),
annCol=annotation,annRow=annotation,
labCol=NA,labRow=NA,Colv='Rowv')
length(levels(patients.df$ID))
patients.df$ID
unique(patients.df$ID)
ann_colors = list(group=c('red','orange','black','blue'),
ID=colorRampPalette(brewer.pal(8,'Set1'))(length(unique(patients.df$ID))),
tissue=c('grey','black'),
V=colorRampPalette(brewer.pal(8,'Set2'))(length(unique(patients.df$V))),
freq=c('darkgreen'))
annotation = data.frame(group=patients.df$Group,ID=factor(patients.df$ID),tissue=patients.df$Tissue,
V=patients.df$TRV,freq=patients.df$Freq)
aheatmap(TRD_scores,color=quakescale(100),
annCol=annotation,annColors=ann_colors,annRow=annotation,
labCol=NA,labRow=NA,Colv='Rowv')
ann_colors = list(group=c('red','orange','black','blue'),
ID=colorRampPalette(brewer.pal(8,'Set1'))(length(unique(patients.df$ID))),
tissue=c('grey','black'),
V=colorRampPalette(brewer.pal(8,'Set2'))(length(unique(patients.df$V))),
freq=c('darkgreen'))
annotation = data.frame(group=patients.df$Group,ID=factor(patients.df$ID),tissue=patients.df$Tissue,
V=factor(patients.df$TRV),freq=patients.df$Freq)
aheatmap(TRD_scores,color=quakescale(100),
annCol=annotation,annColors=ann_colors,annRow=annotation,
labCol=NA,labRow=NA,Colv='Rowv')
patients.df$TRV
colorRampPalette(brewer.pal(8,'Set2'))(length(unique(patients.df$V)))
patients.df = all_patients_TRD.df
ann_colors = list(group=c('red','orange','black','blue'),
ID=colorRampPalette(brewer.pal(8,'Set1'))(length(unique(patients.df$ID))),
tissue=c('grey','black'),
V=colorRampPalette(brewer.pal(8,'Set2'))(length(unique(patients.df$TRV))),
freq=c('darkgreen'))
annotation = data.frame(group=patients.df$Group,ID=factor(patients.df$ID),tissue=patients.df$Tissue,
V=factor(patients.df$TRV),freq=patients.df$Freq)
aheatmap(TRD_scores,color=quakescale(100),annCol=annotation,annColors=ann_colors,annRow=annotation,
filename='plots/pairwise_TRD.png',cellwidth=1.2,cellheight=1.2,
labCol=NA,labRow=NA,Colv='Rowv')
ann_colors = list(group=c('red','orange','black','blue'),
ID=colorRampPalette(brewer.pal(8,'Set2'))(length(unique(patients.df$ID))),
tissue=c('grey','black'),
V=colorRampPalette(brewer.pal(8,'Set1'))(length(unique(patients.df$TRV))),
freq=c('darkgreen'))
annotation = data.frame(group=patients.df$Group,ID=factor(patients.df$ID),tissue=patients.df$Tissue,
V=factor(patients.df$TRV),freq=patients.df$Freq)
aheatmap(TRD_scores,color=quakescale(100),annCol=annotation,annColors=ann_colors,annRow=annotation,
filename='plots/pairwise_TRD.png',cellwidth=1.2,cellheight=1.2,
labCol=NA,labRow=NA,Colv='Rowv')
plot_pairwise = function(patients.df,chain){
ann_colors = list(group=c('red','orange','black','blue'),
ID=colorRampPalette(brewer.pal(8,'Set2'))(length(unique(patients.df$ID))),
tissue=c('grey','black'),
V=colorRampPalette(brewer.pal(8,'Set1'))(length(unique(patients.df$TRV))),
freq=c('darkgreen'))
annotation = data.frame(group=patients.df$Group,ID=factor(patients.df$ID),tissue=patients.df$Tissue,
V=factor(patients.df$TRV),freq=patients.df$Freq)
aheatmap(TRD_scores,color=quakescale(100),annCol=annotation,annColors=ann_colors,annRow=annotation,
filename=paste('plots/pairwise_',chain,'.png',sep=''),cellwidth=1.2,cellheight=1.2,
labCol=NA,labRow=NA,Colv='Rowv')
}
plot_pairwise(all_patients_TRD.df,'TRD')
plot_pairwise(all_patients_TRG.df,'TRG')
plot_pairwise = function(scores,patients.df,chain){
ann_colors = list(group=c('red','orange','black','blue'),
ID=colorRampPalette(brewer.pal(8,'Set2'))(length(unique(patients.df$ID))),
tissue=c('grey','black'),
V=colorRampPalette(brewer.pal(8,'Set1'))(length(unique(patients.df$TRV))),
freq=c('darkgreen'))
annotation = data.frame(group=patients.df$Group,ID=factor(patients.df$ID),tissue=patients.df$Tissue,
V=factor(patients.df$TRV),freq=patients.df$Freq)
aheatmap(scores,color=quakescale(100),annCol=annotation,annColors=ann_colors,annRow=annotation,
filename=paste('plots/pairwise_',chain,'.png',sep=''),cellwidth=1.2,cellheight=1.2,
labCol=NA,labRow=NA,Colv='Rowv')
}
plot_pairwise(TRD_scores,all_patients_TRD.df,'TRD')
plot_pairwise(TRG_scores,all_patients_TRG.df,'TRG')
plot_pairwise = function(scores,patients.df,chain,cwidth){
ann_colors = list(group=c('red','orange','black','blue'),
ID=colorRampPalette(brewer.pal(8,'Set2'))(length(unique(patients.df$ID))),
tissue=c('grey','black'),
V=colorRampPalette(brewer.pal(8,'Set1'))(length(unique(patients.df$TRV))),
freq=c('darkgreen'))
annotation = data.frame(group=patients.df$Group,ID=factor(patients.df$ID),tissue=patients.df$Tissue,
V=factor(patients.df$TRV),freq=patients.df$Freq)
aheatmap(scores,color=quakescale(100),annCol=annotation,annColors=ann_colors,annRow=annotation,
filename=paste('plots/pairwise_',chain,'.png',sep=''),cellwidth=cwidth,cellheight=cwidth,
labCol=NA,labRow=NA,Colv='Rowv')
}
plot_pairwise(TRD_scores,all_patients_TRD.df,'TRD',1.2)
plot_pairwise(TRG_scores,all_patients_TRG.df,'TRG',1.5)
sample_summary = ddply(all_patients.df,.(Group,ID,Tissue,Chain),summarize,samples=sum(Count))
g = ggplot(sample_summary,aes(factor(ID),samples))
g = g + geom_point(aes(color=Tissue,shape=Chain),size=3)
g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
ggsave('plots/sample_sizes.png',width=5,height=3)
## summarize diversity resampling ##
divshannon_summary = ddply(all_patients.df,.(Group,ID,Tissue,Chain),
function(x){return(divsample(x,50,100,'shannon'))})
divsimpson_summary = ddply(all_patients.df,.(Group,ID,Tissue,Chain),
function(x){return(divsample(x,50,100,'simpson'))})
### rarefaction of diversities ###
divsample = function(counts.df,subsamples,nsamples,divindex) {
counts_expand.df = counts.df[rep(1:nrow(counts.df),counts.df[['Count']]),]
if (nrow(counts_expand.df) <= subsamples){
# return regular diversity if sample size is smaller than subsample size
divresults = diversity(counts.df$Count,index=divindex)
} else {
divresults = rep(NA,nsamples)
for (i in 1:nsamples) {
subcounts_expand.df = counts_expand.df[sample.int(nrow(counts_expand.df),subsamples),]
subcounts.df = ddply(subcounts_expand.df,.(Group,ID,Tissue,Chain,TRV,CDR3,TRJ),
summarize,Count=length(Count))
divresults[i] = diversity(subcounts.df$Count,index=divindex)
}
}
return(data.frame(median=median(divresults),lq=quantile(divresults,0.25),
uq=quantile(divresults,0.75)))
}
## summarize diversity resampling ##
divshannon_summary = ddply(all_patients.df,.(Group,ID,Tissue,Chain),
function(x){return(divsample(x,50,100,'shannon'))})
divsimpson_summary = ddply(all_patients.df,.(Group,ID,Tissue,Chain),
function(x){return(divsample(x,50,100,'simpson'))})
# subsampled summary plot
g = ggplot(divshannon_summary,aes(factor(ID),median,color=Tissue,shape=Chain))
g = g + geom_point(size=3)
g = g + geom_errorbar(aes(ymin=lq,ymax=uq))
g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
ggsave('plots/shannon_subsample_summary.png',width=5,height=3)
## tissue and chain subsampled
shannon_tissue = dcast(divshannon_summary,Group + ID + Chain ~ Tissue,value.var='median')
g = ggplot(shannon_tissue,aes(IEL,PBL))
g = g + geom_point(aes(color=Group,shape=Chain),size=3)
g = g + geom_abline(a=1)
g
ggsave('plots/shannon_subsample_tissue.png')
shannon_chain = dcast(divshannon_summary,Group + ID + Tissue ~ Chain,value.var='median')
g = ggplot(shannon_chain,aes(TRG,TRD))
g = g + geom_point(aes(color=Group,shape=Tissue),size=3)
g = g + geom_abline(a=1)
g
ggsave('plots/shannon_subsample_chain.png')
## simpson subsampled
g = ggplot(divsimpson_summary,aes(factor(ID),median,color=Tissue,shape=Chain))
g = g + geom_point(size=3)
g = g + geom_errorbar(aes(ymin=lq,ymax=uq))
g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
ggsave('plots/simpson_subsample_summary.png',width=5,height=3)
## tissue and chain subsampled
simpson_tissue = dcast(divsimpson_summary,Group + ID + Chain ~ Tissue,value.var='median')
g = ggplot(simpson_tissue,aes(IEL,PBL))
g = g + geom_point(aes(color=Group,shape=Chain),size=3)
g = g + geom_abline(a=1)
g
ggsave('plots/simpson_subsample_tissue.png')
simpson_chain = dcast(divsimpson_summary,Group + ID + Tissue ~ Chain,value.var='median')
g = ggplot(simpson_chain,aes(TRG,TRD))
g = g + geom_point(aes(color=Group,shape=Tissue),size=3)
g = g + geom_abline(a=1)
g
ggsave('plots/simpson_subsample_chain.png')
require(plyr)
require(reshape2)
# subsampled summary plot
g = ggplot(divshannon_summary,aes(factor(ID),median,color=Tissue,shape=Chain))
g = g + geom_point(size=3)
g = g + geom_errorbar(aes(ymin=lq,ymax=uq))
g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
ggsave('plots/shannon_subsample_summary.png',width=5,height=3)
## tissue and chain subsampled
shannon_tissue = dcast(divshannon_summary,Group + ID + Chain ~ Tissue,value.var='median')
g = ggplot(shannon_tissue,aes(IEL,PBL))
g = g + geom_point(aes(color=Group,shape=Chain),size=3)
g = g + geom_abline(a=1)
g
ggsave('plots/shannon_subsample_tissue.png')
shannon_chain = dcast(divshannon_summary,Group + ID + Tissue ~ Chain,value.var='median')
g = ggplot(shannon_chain,aes(TRG,TRD))
g = g + geom_point(aes(color=Group,shape=Tissue),size=3)
g = g + geom_abline(a=1)
g
ggsave('plots/shannon_subsample_chain.png')
## simpson subsampled
g = ggplot(divsimpson_summary,aes(factor(ID),median,color=Tissue,shape=Chain))
g = g + geom_point(size=3)
g = g + geom_errorbar(aes(ymin=lq,ymax=uq))
g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
ggsave('plots/simpson_subsample_summary.png',width=5,height=3)
## tissue and chain subsampled
simpson_tissue = dcast(divsimpson_summary,Group + ID + Chain ~ Tissue,value.var='median')
g = ggplot(simpson_tissue,aes(IEL,PBL))
g = g + geom_point(aes(color=Group,shape=Chain),size=3)
g = g + geom_abline(a=1)
g
ggsave('plots/simpson_subsample_tissue.png')
simpson_chain = dcast(divsimpson_summary,Group + ID + Tissue ~ Chain,value.var='median')
g = ggplot(simpson_chain,aes(TRG,TRD))
g = g + geom_point(aes(color=Group,shape=Tissue),size=3)
g = g + geom_abline(a=1)
g
ggsave('plots/simpson_subsample_chain.png')
# groups by chaind and tissue
write_group_fasta(all_patients_TRG.df[all_patients_TRG.df$Tissue=='IEL',],'TRG_IEL')
write_group_fasta(all_patients_TRG.df[all_patients_TRG.df$Tissue=='PBL',],'TRG_PBL')
write_group_fasta(all_patients_TRD.df[all_patients_TRD.df$Tissue=='IEL',],'TRD_IEL')
write_group_fasta(all_patients_TRD.df[all_patients_TRD.df$Tissue=='PBL',],'TRD_PBL')
write_fasta = function(patients.df,label){
cdr3_names = paste(patients.df$Group,patients.df$ID,patients.df$Tissue,
patients.df$Chain,patients.df$TRV,sep='_')
cdr3.ss = AAStringSet(patients.df$CDR3)
names(cdr3.ss) = cdr3_names
writeXStringSet(cdr3.ss,paste('data/fasta/',label,'.fa',sep=''))
}
# just by chain and tissue
write_fasta(all_patients_TRG.df[all_patients_TRG.df$Tissue=='IEL',],'TRG_IEL')
write_fasta(all_patients_TRG.df[all_patients_TRG.df$Tissue=='PBL',],'TRG_PBL')
write_fasta(all_patients_TRD.df[all_patients_TRD.df$Tissue=='IEL',],'TRD_IEL')
write_fasta(all_patients_TRD.df[all_patients_TRD.df$Tissue=='PBL',],'TRD_PBL')
head(patients.df)
plot_pairwise = function(scores,patients.df,chain,cwidth){
ann_colors = list(group=c('red','orange','black','blue'),
ID=colorRampPalette(brewer.pal(8,'Set2'))(length(unique(patients.df$ID))),
tissue=c('grey','black'),
V=colorRampPalette(brewer.pal(8,'Set1'))(length(unique(patients.df$TRV))),
freq=c('darkgreen'))
annotation = data.frame(group=patients.df$Group,ID=factor(patients.df$ID),tissue=patients.df$Tissue,
V=factor(patients.df$TRV),freq=patients.df$Freq)
return(aheatmap(scores,color=quakescale(100),annCol=annotation,annColors=ann_colors,annRow=annotation,
filename=paste('plots/pairwise_',chain,'.png',sep=''),cellwidth=cwidth,cellheight=cwidth,
labCol=NA,labRow=NA,Colv='Rowv'))
}
TRD_ahm = plot_pairwise(TRD_scores,all_patients_TRD.df,'TRD',1.2)
TRG_ahm = plot_pairwise(TRG_scores,all_patients_TRG.df,'TRG',1.5)
TRD_ahm
TRD_ahm$Colv
TRD_ahm$Colv[[1]]
get_branch_labels = function(dend,bvector){
# tree base case, bvector empty
if (length(bvector) == 0) {
# if we reach a leaf
if (attributes(dend)$members == 1) {
return(attributes(dend)$label)
}
return(c(get_branch_labels(dend[[1]],bvector),get_branch_labels(dend[[2]],bvector)))
}
return(get_branch_labels(dend[[bvector[1]]],bvector[-1]))
}
get_branch_labels(TRD_ahm$Colv)
get_branch_labels(TRD_ahm$Colv,c())
sort(get_branch_labels(TRD_ahm$Colv,c()))
length(get_branch_labels(TRD_ahm$Colv,c()))
dim(all_patients_TRD.df)
head(all_patients_TRD.df)
head(TRD_scores)
TRD_A_indices = get_branch_labels(TRD_ahm$Colv,c(2,1,1))
TRD_B_indices = get_branch_labels(TRD_ahm$Colv,c(2,1,2))
TRD_C_indices = get_branch_labels(TRD_ahm$Colv,c(2,2,1))
length(TRD_A_indices)
length(TRD_B_indices)
length(TRD_C_indices)
TRD_A_indices
all_patients_TRD[TRD_A_indices,]
all_patients_TRD.df[TRD_A_indices,]
all_patients_TRD_clust.df$Cluster = NA
all_patients_TRD_clust.df = all_patients_TRD.df
all_patients_TRD_clust.df$Cluster = NA
head(all_patients_TRD_clust.df)
all_patients_TRD_clust.df = all_patients_TRD.df
all_patients_TRD_clust.df$Cluster = NA
all_patients_TRD_clust.df$Cluster[TRD_A_indices] = 'A'
all_patients_TRD_clust.df$Cluster[TRD_B_indices] = 'B'
all_patients_TRD_clust.df$Cluster[TRD_C_indices] = 'C'
head(all_patients_TRD_clust.df)
TRD_clustgroup_summary = ddply(all_patients_TRD_clust.df,.(Group,Cluster),
counts=sum(Count))
TRD_clustgroup_summary
TRD_clustgroup_summary = ddply(all_patients_TRD_clust.df,.(Group,Cluster),summarize,
counts=sum(Count))
TRD_clustgroup_summary
# add label to data frame for clusters
all_patients_TRD_clust.df = all_patients_TRD.df
all_patients_TRD_clust.df$Cluster = 'rest'
all_patients_TRD_clust.df$Cluster[TRD_A_indices] = 'A'
all_patients_TRD_clust.df$Cluster[TRD_B_indices] = 'B'
all_patients_TRD_clust.df$Cluster[TRD_C_indices] = 'C'
TRD_clustgroup_summary = ddply(all_patients_TRD_clust.df,.(Group,Cluster),summarize,
counts=sum(Count))
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),counts,fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
?geom_bar
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),(..counts..)/sum(..count..),fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),(..counts..)/sum(..counts..),fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
biocLite('scales')
require(scales)
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),(..counts..)/sum(..counts..),fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),(..count..)/sum(..count..),fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),counts,fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),counts,fill=Group))
g = g + geom_bar(aes(y = (..count..)/sum(..count..)))
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),counts,fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
TRD_clustgroup_summary
TRD_clustgroup_summary = ddply(all_patients_TRD_clust.df,.(Group,Cluster),summarize,
counts=Count/sum(Count))
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),counts,fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
TRD_clustgroup_summary = ddply(all_patients_TRD_clust.df,.(Group,Cluster),summarize,
counts=sum(Count))
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),counts,fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
TRD_clustgroup_summary = ddply(all_patients_TRD_clust.df,.(Group,Cluster),summarize,
counts=sum(Count))
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),counts,fill=Group))
g = g + geom_bar(stat='density')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
?geom_bar
TRD_clustgroup_summary = ddply(all_patients_TRD_clust.df,.(Group,Cluster),summarize,
counts=sum(Count))
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),counts,fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
dcast(TRD_clustgroup_summary,Group ~ Cluster, value.var='counts')
dcast(TRD_clustgroup_summary,Group ~ Cluster, value.var='counts')
?summarize
summary(dcast(TRD_clustgroup_summary,Group ~ Cluster, value.var='counts'))
?prop.table
prop.table(dcast(TRD_clustgroup_summary,Group ~ Cluster, value.var='counts'))
prop.table(dcast(TRD_clustgroup_summary,Group ~ Cluster, value.var='counts'),1)
prop.table(matrix(dcast(TRD_clustgroup_summary,Group ~ Cluster, value.var='counts')),1)
?prop.table
TRD_clustgroup_table = dcast(TRD_clustgroup_summary,Group ~ Cluster, value.var='counts')
class(TRD_clustgroup_table)
as.matrix(class(TRD_clustgroup_table))
as.matrix(TRD_clustgroup_table)
summary(TRD_clustgroup_summary)
TRD_clustgroup_summary
TRD_clustgroup_table = dcast(TRD_clustgroup_summary,Group ~ Cluster, value.var='counts')
TRD_clustgroup_table
summary(TRD_clustgroup_table)
matrix(TRD_clustgroup_table)
prop.table(TRD_clustgroup_table)
prop.table(TRD_clustgroup_table[2:4])
prop.table(TRD_clustgroup_table[2:4],1)
prop.table(TRD_clustgroup_table[2:4],2)
prop.table(matrix(TRD_clustgroup_table[2:4]),2)
prop.table(table(TRD_clustgroup_table[2:4]),2)
prop.table(table(TRD_clustgroup_table[2:4]))
table(TRD_clustgroup_table)
TRD_clustgroup_table
?prop.table
?table()
?table
sweep(TRD_clustgroup_table[2:4],2)
sweep(TRD_clustgroup_table[2:4],2,sum)
sweep(TRD_clustgroup_table[2:4],1,sum)
colSums(TRD_clustgroup_table)
colSums(TRD_clustgroup_table2:4)
colSums(TRD_clustgroup_table[,2:4])
TRD_clustgroup_table
172/418
180/587
71/237
g = ggplot(TRD_clustgroup_summary,aes(factor(Cluster),counts,fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
TRG_A_indices = get_branch_labels(TRG_ahm$Colv,c(2,1))
TRG_B_indices = get_branch_labels(TRG_ahm$Colv,c(2,2,1))
TRG_C_indices = get_branch_labels(TRG_ahm$Colv,c(2,2,2,1))
TRG_D_indices = get_branch_labels(TRG_ahm$Colv,c(2,2,2,2,2))
all_patients_TRG_clust.df = all_patients_TRG.df
all_patients_TRG_clust.df$Cluster = 'rest'
all_patients_TRG_clust.df$Cluster[TRD_A_indices] = 'A'
all_patients_TRG_clust.df$Cluster[TRD_B_indices] = 'B'
all_patients_TRG_clust.df$Cluster[TRD_C_indices] = 'C'
all_patients_TRG_clust.df$Cluster[TRD_D_indices] = 'C'
TRG_A_indices = get_branch_labels(TRG_ahm$Colv,c(2,1))
TRG_B_indices = get_branch_labels(TRG_ahm$Colv,c(2,2,1))
TRG_C_indices = get_branch_labels(TRG_ahm$Colv,c(2,2,2,1))
TRG_D_indices = get_branch_labels(TRG_ahm$Colv,c(2,2,2,2,2))
# add label to data frame for clusters
all_patients_TRG_clust.df = all_patients_TRG.df
all_patients_TRG_clust.df$Cluster = 'rest'
all_patients_TRG_clust.df$Cluster[TRD_A_indices] = 'A'
all_patients_TRG_clust.df$Cluster[TRD_B_indices] = 'B'
all_patients_TRG_clust.df$Cluster[TRD_C_indices] = 'C'
all_patients_TRG_clust.df$Cluster[TRD_D_indices] = 'C'
dim(all_patients_TRG.df)
TRG_A_indices = get_branch_labels(TRG_ahm$Colv,c(2,1))
TRG_B_indices = get_branch_labels(TRG_ahm$Colv,c(2,2,1))
TRG_C_indices = get_branch_labels(TRG_ahm$Colv,c(2,2,2,1))
TRG_D_indices = get_branch_labels(TRG_ahm$Colv,c(2,2,2,2,2))
TRG_A_indices
all_patients_TRG_clust.df = all_patients_TRG.df
all_patients_TRG_clust.df$Cluster = 'rest'
all_patients_TRG_clust.df$Cluster[TRG_A_indices] = 'A'
all_patients_TRG_clust.df$Cluster[TRG_B_indices] = 'B'
all_patients_TRG_clust.df$Cluster[TRG_C_indices] = 'C'
all_patients_TRG_clust.df$Cluster[TRG_D_indices] = 'C'
TRG_clustgroup_summary = ddply(all_patients_TRG_clust.df,.(Group,Cluster),summarize,
counts=sum(Count))
g = ggplot(TRG_clustgroup_summary,aes(factor(Cluster),counts,fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
TRG_clustgroup_summary
# add label to data frame for clusters
all_patients_TRG_clust.df = all_patients_TRG.df
all_patients_TRG_clust.df$Cluster = 'rest'
all_patients_TRG_clust.df$Cluster[TRG_A_indices] = 'A'
all_patients_TRG_clust.df$Cluster[TRG_B_indices] = 'B'
all_patients_TRG_clust.df$Cluster[TRG_C_indices] = 'C'
all_patients_TRG_clust.df$Cluster[TRG_D_indices] = 'D'
TRG_clustgroup_summary = ddply(all_patients_TRG_clust.df,.(Group,Cluster),summarize,
counts=sum(Count))
g = ggplot(TRG_clustgroup_summary,aes(factor(Cluster),counts,fill=Group))
g = g + geom_bar(stat='identity')
# g = g + scale_fill_manual(values=vcolors,limits=levels(trv$TRV))
# g = g + facet_grid(~Group,scales='free_x',space='free_x')
g
write_fasta(all_patients_TRD_clust.df[all_patients_TRD_clust.df$Clusters=='A',],'TRD_clust_A')
write_fasta(all_patients_TRD_clust.df[all_patients_TRD_clust.df$Clusters=='B',],'TRD_clust_B')
write_fasta(all_patients_TRD_clust.df[all_patients_TRD_clust.df$Clusters=='C',],'TRD_clust_C')
# 4 TRG clusters
write_fasta(all_patients_TRG_clust.df[all_patients_TRG_clust.df$Clusters=='A',],'TRG_clust_A')
write_fasta(all_patients_TRG_clust.df[all_patients_TRG_clust.df$Clusters=='B',],'TRG_clust_B')
write_fasta(all_patients_TRG_clust.df[all_patients_TRG_clust.df$Clusters=='C',],'TRG_clust_C')
write_fasta(all_patients_TRG_clust.df[all_patients_TRG_clust.df$Clusters=='D',],'TRG_clust_D')
all_patients_TRD_clust.df$Cluster
all_patients_TRD_clust.df$Cluster=='A'
write_fasta(all_patients_TRD_clust.df[all_patients_TRD_clust.df$Clusters=='A',],'TRD_clust_A')
write_fasta(all_patients_TRD_clust.df[all_patients_TRD_clust.df$Clusters=='B',],'TRD_clust_B')
write_fasta(all_patients_TRD_clust.df[all_patients_TRD_clust.df$Clusters=='C',],'TRD_clust_C')
# 4 TRG clusters
write_fasta(all_patients_TRG_clust.df[all_patients_TRG_clust.df$Clusters=='A',],'TRG_clust_A')
write_fasta(all_patients_TRG_clust.df[all_patients_TRG_clust.df$Clusters=='B',],'TRG_clust_B')
write_fasta(all_patients_TRG_clust.df[all_patients_TRG_clust.df$Clusters=='C',],'TRG_clust_C')
write_fasta(all_patients_TRG_clust.df[all_patients_TRG_clust.df$Clusters=='D',],'TRG_clust_D')
all_patients_TRD_clust.df[all_patients_TRD_clust.df$Clusters=='A',]
all_patients_TRD_clust.df$Clusters=='A'
write_fasta(all_patients_TRD_clust.df[all_patients_TRD_clust.df$Cluster=='A',],'TRD_clust_A')
write_fasta(all_patients_TRD_clust.df[all_patients_TRD_clust.df$Cluster=='B',],'TRD_clust_B')
write_fasta(all_patients_TRD_clust.df[all_patients_TRD_clust.df$Cluster=='C',],'TRD_clust_C')
# 4 TRG clusters
write_fasta(all_patients_TRG_clust.df[all_patients_TRG_clust.df$Cluster=='A',],'TRG_clust_A')
write_fasta(all_patients_TRG_clust.df[all_patients_TRG_clust.df$Cluster=='B',],'TRG_clust_B')
write_fasta(all_patients_TRG_clust.df[all_patients_TRG_clust.df$Cluster=='C',],'TRG_clust_C')
write_fasta(all_patients_TRG_clust.df[all_patients_TRG_clust.df$Cluster=='D',],'TRG_clust_D')
